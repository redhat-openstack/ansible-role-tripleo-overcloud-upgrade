#!/bin/bash
set -ux

onerror(){

    echo "Command failed"

        # get the failures list
        heat resource-list --nested-depth 5 overcloud | grep -i FAIL >> failed_upgrade_list.log || true

        # get any puppet related errors
        for failed in $(heat resource-list \
            --nested-depth 5 overcloud | grep -i FAIL |
            grep 'StructuredDeployment ' | cut -d '|' -f3)
        do echo -n "heat deployment-show out put for deployment: $failed" >> failed_upgrade.log
           echo -n "######################################################" >> failed_upgrade.log
           heat deployment-show $failed >> failed_upgrade.log
           echo -n "######################################################" >> failed_upgrade.log
           echo "puppet standard error for deployment: $failed" >> failed_upgrade.log
           echo -n "######################################################" >> failed_upgrade.log
           echo -e $(heat deployment-show $failed | jq .output_values.deploy_stderr) >> failed_upgrade.log
           echo -n "######################################################" >> failed_upgrade.log
        done

        if [ -z "$failed" ]; then
            echo "No StructuredDeployment Errors found" >> failed_upgrade.log
            echo "Please check os-net-config errors" >> failed_upgrade.log
            echo "" >> failed_upgrade.log
            echo "On the overcloud nodes execute:" >> failed_upgrade.log
            echo "sudo cat /var/log/messages | grep -E 'os-net-config|Trying to ping'" >> failed_upgrade.log

        fi


}
trap onerror ERR

source {{ upgrade_working_dir }}/stackrc

echo "execute aodh upgrade"
{% if target_upgrade_version == 'mitaka' %}
openstack overcloud deploy --templates {{ tht_dir }} \
    -e tripleo-heat-templates/overcloud-resource-registry-puppet.yaml \
{% if network_isolation == true %}
    -e {{ tht_dir }}/environments/network-isolation.yaml \
    -e {{ tht_dir }}/environments/net-single-nic-with-vlans.yaml \
    -e ~/network-environment.yaml \
{% endif %}
    -e {{ tht_dir }}/environments/puppet-pacemaker.yaml \
{% for item in upgrade_custom_templates_controller %}
    -e {{ item }} \
{% endfor %}
    -e {{ tht_dir }}/environments/major-upgrade-aodh.yaml

echo "execute keystone upgrade"
openstack overcloud deploy --templates {{ tht_dir }} \
    -e tripleo-heat-templates/overcloud-resource-registry-puppet.yaml \
{% if network_isolation == true %}
    -e {{ tht_dir }}/environments/network-isolation.yaml \
    -e {{ tht_dir }}/environments/net-single-nic-with-vlans.yaml \
    -e ~/network-environment.yaml \
{% endif %}
    -e {{ tht_dir }}/environments/puppet-pacemaker.yaml \
{% for item in upgrade_custom_templates_controller %}
    -e {{ item }} \
{% endfor %}
    -e {{ tht_dir }}/environments/major-upgrade-keystone-liberty-mitaka.yaml
{% endif %}

echo "execute script delivery"
openstack overcloud deploy --templates {{ tht_dir }} \
    -e tripleo-heat-templates/overcloud-resource-registry-puppet.yaml \
{% if network_isolation == true %}
    -e {{ tht_dir }}/environments/network-isolation.yaml \
    -e {{ tht_dir }}/environments/net-single-nic-with-vlans.yaml \
    -e ~/network-environment.yaml \
{% endif %}
    -e {{ tht_dir }}/environments/puppet-pacemaker.yaml \
    -e {{ tht_dir }}/environments/major-upgrade-pacemaker-init.yaml \
{% for item in upgrade_custom_templates_script_delivery %}
    -e {{ item }} \
{% endfor %}

echo "get ceph uuid and update swift"
for swift in $(nova list | grep swift  | awk '{ print $2; }'); do
    echo "Run upgrade on $swift"
    {{ upgrade_non_controller_script }} --upgrade  $swift
done

echo "execute major upgrade controller"
openstack overcloud deploy --templates {{ tht_dir }} \
    -e tripleo-heat-templates/overcloud-resource-registry-puppet.yaml \
{% if network_isolation == true %}
    -e {{ tht_dir }}/environments/network-isolation.yaml \
    -e {{ tht_dir }}/environments/net-single-nic-with-vlans.yaml \
    -e ~/network-environment.yaml \
{% endif %}
    -e {{ tht_dir }}/environments/puppet-pacemaker.yaml \
{% for item in upgrade_custom_templates_controller %}
    -e {{ item }} \
{% endfor %}
    -e {{ tht_dir }}/environments/major-upgrade-pacemaker.yaml

echo "get compute uuid and update compute"
for compute in $(nova list | grep compute  | awk '{ print $2; }'); do
    echo "Run upgrade on $compute"
    {{ upgrade_non_controller_script }} --upgrade  $compute
done

echo "get ceph uuid and update ceph"
for ceph in $(nova list | grep cephstorage  | awk '{ print $2; }'); do
    echo "Run upgrade on $ceph"
    {{ upgrade_non_controller_script }} --upgrade  $ceph
done

echo "execute converge"
openstack overcloud deploy --templates {{ tht_dir }} \
    -e tripleo-heat-templates/overcloud-resource-registry-puppet.yaml \
    -e tripleo-heat-templates/environments/puppet-pacemaker.yaml \
    -e tripleo-heat-templates/environments/major-upgrade-pacemaker-converge.yaml \
{% for item in upgrade_custom_templates_converge %}
    -e {{ item }} \
{% endfor %}
{% if network_isolation == true %}
    -e {{ tht_dir }}/environments/network-isolation.yaml \
    -e {{ tht_dir }}/environments/net-single-nic-with-vlans.yaml \
    -e ~/network-environment.yaml
{% endif %}

echo "check upgrade status"
heat stack-list | grep -i COMPLETE
